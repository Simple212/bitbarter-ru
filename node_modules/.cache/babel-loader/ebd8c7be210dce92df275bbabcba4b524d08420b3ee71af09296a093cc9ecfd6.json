{"ast":null,"code":"var _jsxFileName = \"/home/sl/Desktop/Vite-React-Typescript-Railway-Template/src/Components/clipboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ClipboardCopy(_ref) {\n  _s();\n  let {\n    copyText\n  } = _ref;\n  const [isCopied, setIsCopied] = useState(false);\n\n  // This is the function we wrote earlier\n  async function copyTextToClipboard(text) {\n    if ('clipboard' in navigator) {\n      return await navigator.clipboard.writeText(text);\n    } else {\n      return document.execCommand('copy', true, text);\n    }\n  }\n\n  // onClick handler function for the copy button\n  const handleCopyClick = () => {\n    // Asynchronously call copyTextToClipboard\n    copyTextToClipboard(copyText).then(() => {\n      // If successful, update the isCopied state value\n      setIsCopied(true);\n      setTimeout(() => {\n        setIsCopied(false);\n      }, 1500);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: copyText,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCopyClick,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: isCopied ? 'Copied!' : 'Copy'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n_s(ClipboardCopy, \"dIAMLjsduWkZ4KaA+ylUo0FLqmM=\");\n_c = ClipboardCopy;\nexport default ClipboardCopy;\nvar _c;\n$RefreshReg$(_c, \"ClipboardCopy\");","map":{"version":3,"names":["React","useEffect","useState","ClipboardCopy","copyText","isCopied","setIsCopied","copyTextToClipboard","text","navigator","clipboard","writeText","document","execCommand","handleCopyClick","then","setTimeout","catch","err","console","log"],"sources":["/home/sl/Desktop/Vite-React-Typescript-Railway-Template/src/Components/clipboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nfunction ClipboardCopy({ copyText }) {\n    const [isCopied, setIsCopied] = useState(false);\n  \n    // This is the function we wrote earlier\n    async function copyTextToClipboard(text) {\n      if ('clipboard' in navigator) {\n        return await navigator.clipboard.writeText(text);\n      } else {\n        return document.execCommand('copy', true, text);\n      }\n    }\n  \n    // onClick handler function for the copy button\n    const handleCopyClick = () => {\n      // Asynchronously call copyTextToClipboard\n      copyTextToClipboard(copyText)\n        .then(() => {\n          // If successful, update the isCopied state value\n          setIsCopied(true);\n          setTimeout(() => {\n            setIsCopied(false);\n          }, 1500);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  \n    return (\n      <div>\n        <input type=\"text\" value={copyText} readOnly />\n        {/* Bind our handler function to the onClick button property */}\n        <button onClick={handleCopyClick}>\n          <span>{isCopied ? 'Copied!' : 'Copy'}</span>\n        </button>\n      </div>\n    );\n  }\n  export default ClipboardCopy"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAElD,SAASC,aAAa,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACA,eAAeK,mBAAmB,CAACC,IAAI,EAAE;IACvC,IAAI,WAAW,IAAIC,SAAS,EAAE;MAC5B,OAAO,MAAMA,SAAS,CAACC,SAAS,CAACC,SAAS,CAACH,IAAI,CAAC;IAClD,CAAC,MAAM;MACL,OAAOI,QAAQ,CAACC,WAAW,CAAC,MAAM,EAAE,IAAI,EAAEL,IAAI,CAAC;IACjD;EACF;;EAEA;EACA,MAAMM,eAAe,GAAG,MAAM;IAC5B;IACAP,mBAAmB,CAACH,QAAQ,CAAC,CAC1BW,IAAI,CAAC,MAAM;MACV;MACAT,WAAW,CAAC,IAAI,CAAC;MACjBU,UAAU,CAAC,MAAM;QACfV,WAAW,CAAC,KAAK,CAAC;MACpB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC,CACDW,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC;EACN,CAAC;EAED,oBACE;IAAA,wBACE;MAAO,IAAI,EAAC,MAAM;MAAC,KAAK,EAAEd,QAAS;MAAC,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAAG,eAE/C;MAAQ,OAAO,EAAEU,eAAgB;MAAA,uBAC/B;QAAA,UAAOT,QAAQ,GAAG,SAAS,GAAG;MAAM;QAAA;QAAA;QAAA;MAAA;IAAQ;MAAA;MAAA;MAAA;IAAA,QACrC;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GArCMF,aAAa;AAAA,KAAbA,aAAa;AAsCpB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}